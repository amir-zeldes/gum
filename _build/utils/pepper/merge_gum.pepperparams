<?xml version="1.0" encoding="UTF-8"?>
<pepper>
	<importer name="TreetaggerImporter" path="file:/**gum_tmp**/xml/GUM/">
		<customization>
			<property key="pepper.before.readMeta">meta</property>
			<property key="treetagger.fileExtension">xml</property>
			<property key="treetagger.input.column1">pos</property>
			<property key="treetagger.input.column2">lemma</property>
			<property key="treetagger.input.column3">claws5</property>
			<property key="treetagger.input.column4">tok_func</property>
			<property key="pepper.after.addSLayer">tei</property>
			<property key="treetagger.input.metaTag">text</property>
			<property key="treetagger.input.annotateAllSpansWithSpanName">true</property>
			<property key="treetagger.input.annotateUnannotatedSpans">true</property>
			<property key="treetagger.input.prefixElementToAttributes">true</property>
			<property key="treetagger.input.replaceTokens">"&amp;amp;":"&amp;","&amp;gt;":"&gt;","&amp;lt;":"&lt;"</property>
			<!-- remove annotations that always have an attribute and no content of their own -->
			<property key="pepper.after.removeAnnos">figure;hi;s;sp</property>
			<property key="pepper.after.addSLayer">tei</property>
		</customization>
	</importer>
	<importer name="RSTImporter" path="file:/**gum_tmp**/rst/GUM/">
		<customization>
			<property key="rstImporter.tokenize">yes</property>
			<property key="simpleTokenize">' '</property>
			<property key="pepper.after.addSLayer">rst</property>
		</customization>
	</importer>
	<importer name="RSDImporter" path="file:/**gum_tmp**/rsd/GUM/">
		<customization>
			<property key="RSD.namespace">rsd</property>
			<property key="RSD.addEduNum">TRUE</property>
			<property key="RSD.addRelAnno">TRUE</property>
			<property key="pepper.after.addSLayer">rsd</property>
		</customization>
	</importer>
	<importer name="WebannoTSVImporter" path="file:/**gum_tmp**/tsv/GUM/">
		<customization>
			<property key="WebannoTSV.lowerTypes">TRUE</property>
			<property key="WebannoTSV.namespace">ref</property>
		</customization>
	</importer>
	<importer name="CoNLLImporter" path="file:/**gum_tmp**/dep/ud/GUM/">
		<customization>
			<property key="pepper.before.addSLayer">dep</property>
			<property key="conll.SPOS">NONE</property> <!--POSTAG comes from XML -->
			<property key="conll.EDGE.TYPE">dep</property>
			<property key="conll.EDGE.LAYER">dep</property>
			<property key="conll.EDGE.ANNO.NS">dep</property>
			<property key="conll.EDGE.ANNO.NAME">func</property>
			<property key="conll.SENTENCE">FALSE</property>
			<property key="conll.KeyValFeatures">TRUE</property>
			<property key="conll.FEATURES.NAMESPACE">morph</property>
			<property key="conll.SLEMMA">NONE</property> <!-- lemma should come from XML -->
			<property key="pepper.after.removeAnnos">cat</property>
			<property key="pepper.after.addSLayer">dep</property>
			<!--<property key="pepper.after.renameAnnos">deprel:=func</property>-->
		</customization>
	</importer>
	<importer name="PTBImporter" path="file:/**gum_tmp**/const/GUM/">
		<customization>
			<property key="ptb.importer.posName">penn_pos</property>
			<property key="ptb.importer.relationType">edge</property>
			<property key="ptb.importer.nodeNamespace">const</property>
			<property key="ptb.importer.edgeAnnoNamespace">const</property>
		</customization>
	</importer>
	<manipulator name="Merger">
		<property key="copyNodes">true</property>
		<property key="firstAsBase">true</property>
		<property key="escapeMapping">"(":"-LRB-",")":"-RRB-","[":"-LSB-","]":"-RSB-"</property> <!-- map escaped PTB tokens -->
	</manipulator>
	<manipulator name="Mover">
		<property key="Mover.sourceType">tok2node</property>
		<property key="Mover.sourceAnnoNamespace">morph</property>
		<property key="Mover.targetObject">span</property> <!-- can also use 'struct' -->
		<property key="Mover.targetLayer">morph</property>
		<property key="Mover.removeOrig">TRUE</property>
	</manipulator>
	<manipulator name="Mover">
		<property key="Mover.sourceType">edge2edge</property>
		<property key="Mover.sourceLayer">ref</property>
		<property key="Mover.sourceAnno">type</property>
		<property key="Mover.sourceAnnoValue">bridg.*</property>
		<property key="Mover.targetName">bridge</property> <!-- can also use 'struct' -->
		<property key="Mover.targetLayer">bridge</property> <!-- can also use 'struct' -->
		<property key="Mover.targetAnno">type</property>
		<property key="Mover.removeOrig">TRUE</property>
	</manipulator>
	<manipulator name="HeadMarker">
		<property key="HeadMarker.spanLayer">ref</property>
		<property key="HeadMarker.edgeType">dep</property>
		<property key="HeadMarker.ignoreEdgeAnnotation">punct</property>
		<!--<property key="HeadMarker.headRelLayerName">head</property>-->
	</manipulator>
	<!--<manipulator name="Counter">
	</manipulator>-->
	<exporter name="CoNLLCorefExporter" path="file:/**gum_target**coref/conll">
		<customization>
			<property key="ConllCoref.Exporter.NodeLayer">ref</property>
			<property key="ConllCoref.Exporter.EdgeType">coref</property>
			<property key="ConllCoref.Exporter.EdgeAnno">type=ana|coref|appos|cata</property>
			<property key="ConllCoref.Exporter.OutputAnnotation">entity</property>
			<property key="ConllCoref.Exporter.RemoveSingletons">FALSE</property>
		</customization>
	</exporter>
	<exporter name="PAULAExporter" path="file:/**gum_home**paula">
	</exporter>
	<exporter name="ANNISExporter" path="file:/**gum_home**annis">
		<customization>
			<property key="clobber.visualisation">false</property>
		</customization>
	</exporter>
</pepper>

