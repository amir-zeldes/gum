1	Design of Mutation Operators	7	_	_	pos1=_|head_tok=Design|head_pos=_|stype=frag|len=4|head_func=root|heading=heading	6	preparation_r	_	_
2	for Testing Geographic Information Systems	0	_	_	pos1=_|head_tok=Testing|head_pos=_|stype=frag|len=5|head_func=acl|subord=LEFT|heading=heading	1	purpose_r	_	_
3	Suilen H. Alvarado Laboratorio de Bases de Datos Campus de Elviña , Centro de investigación CITIC , Universidade da Coruña , 15071 A Coruña , Spain ; s.hernandez@udc.es	6	_	_	pos1=_|head_tok=Suilen|head_pos=_|stype=other|len=28|head_func=root|para=para	6	attribution_r	_	_
4	Presented at the 2nd XoveTIC Congress , A Coruña , Spain , 5 – 6 September 2019 .	5	_	_	pos1=_|head_tok=Presented|head_pos=_|stype=other|len=18|head_func=root|date	6	circumstance_r	_	_
5	Abstract :	3	_	_	pos1=_|head_tok=Abstract|head_pos=_|stype=frag|len=2|head_func=root|para=para	6	preparation_r	_	_
6	In this article , we propose the definition of specific mutation operators	0	_	_	pos1=_|head_tok=propose|head_pos=_|stype=decl|len=12|head_func=root	0	ROOT	_	_
7	for testing Geographic Information Systems .	0	_	_	pos1=_|head_tok=testing|head_pos=_|stype=decl|len=6|head_func=advcl|subord=LEFT	6	purpose_r	_	_
8	We describe the process	1	_	_	pos1=_|head_tok=describe|head_pos=_|stype=decl|len=4|head_func=root	6	elaboration_r	_	_
9	for applying the operators	0	_	_	pos1=_|head_tok=applying|head_pos=_|stype=decl|len=4|head_func=acl|subord=LEFT	8	purpose_r	_	_
10	and generating mutants ,	0	_	_	pos1=_|head_tok=generating|head_pos=_|stype=decl|len=4|head_func=conj|subord=RIGHT	9	joint_m	_	_
11	and present a case study	1	_	_	pos1=_|head_tok=present|head_pos=_|stype=decl|len=5|head_func=conj|subord=LEFT	8	sequence_m	_	_
12	where these mutation operators are applied to two real - world applications .	0	_	_	pos1=_|head_tok=applied|head_pos=_|stype=decl|len=13|head_func=acl:relcl|subord=LEFT	11	elaboration_r	_	_
13	Keywords :	0	_	_	pos1=_|head_tok=Keywords|head_pos=_|stype=other|len=2|head_func=nsubj|subord=RIGHT|para=para	14	preparation_r	_	_
14	mutation operators ; geographic information systems ; mutation testing	2	_	_	pos1=_|head_tok=operators|head_pos=_|stype=other|len=9|head_func=root	6	restatement_r	_	_
15	1. Introduction	6	_	_	pos1=_|head_tok=Introduction|head_pos=_|stype=frag|len=2|head_func=root|heading=heading	31	preparation_r	_	_
16	Mutation - based testing	5	_	_	pos1=_|head_tok=testing|head_pos=_|stype=decl|len=4|head_func=nsubj|subord=RIGHT|para=para	31	background_r	_	_
17	[ 1 ]	0	_	_	pos1=_|head_tok=1|head_pos=_|stype=decl|len=3|head_func=appos|subord=LEFT	16	evidence_r	_	_
18	is a test technique	1	_	_	pos1=_|head_tok=technique|head_pos=_|stype=decl|len=4|head_func=root	16	same-unit_m	_	_
19	that involves artificially introducing errors into a System Under Test	2	_	_	pos1=_|head_tok=involves|head_pos=_|stype=decl|len=10|head_func=acl:relcl|subord=LEFT	16	elaboration_r	_	_
20	( SUT ) .	0	_	_	pos1=_|head_tok=SUT|head_pos=_|stype=decl|len=4|head_func=appos|subord=LEFT	19	restatement_r	_	_
21	A mutant is a copy of the system	3	_	_	pos1=_|head_tok=copy|head_pos=_|stype=decl|len=8|head_func=root	16	background_r	_	_
22	in which a change has been done	0	_	_	pos1=_|head_tok=done|head_pos=_|stype=decl|len=7|head_func=acl:relcl|subord=LEFT	21	elaboration_r	_	_
23	that , in most cases , will lead to a behaviour different	0	_	_	pos1=_|head_tok=lead|head_pos=_|stype=decl|len=12|head_func=acl:relcl|subord=LEFT	22	elaboration_r	_	_
24	than expected .	0	_	_	pos1=_|head_tok=expected|head_pos=_|stype=decl|len=3|head_func=obl|subord=LEFT	23	antithesis_r	_	_
25	The different mutants are generated automatically by the application of mutation operators .	1	_	_	pos1=_|head_tok=generated|head_pos=_|stype=decl|len=13|head_func=root	21	elaboration_r	_	_
26	In the state of the art , we have found mutation operators , both general purpose and specific to different technologies , languages and paradigms	1	_	_	pos1=_|head_tok=found|head_pos=_|stype=decl|len=25|head_func=root	28	concession_r	_	_
27	[ 2 – 9 ] .	0	_	_	pos1=_|head_tok=2|head_pos=_|stype=decl|len=6|head_func=dep|subord=LEFT	26	evidence_r	_	_
28	However , these operators are not adequate	4	_	_	pos1=_|head_tok=adequate|head_pos=_|stype=decl|len=7|head_func=root	31	justify_r	_	_
29	when trying to test software features	0	_	_	pos1=_|head_tok=trying|head_pos=_|stype=decl|len=6|head_func=advcl|subord=LEFT	28	condition_r	_	_
30	associated with specific domains .	0	_	_	pos1=_|head_tok=associated|head_pos=_|stype=decl|len=5|head_func=acl|subord=LEFT	29	elaboration_r	_	_
31	In this article , we propose mutation operators specific to the domain of Geographic Information Systems	4	_	_	pos1=_|head_tok=Systems|head_pos=_|stype=decl|len=16|head_func=compound|subord=RIGHT	6	elaboration_r	_	_
32	( GIS )	0	_	_	pos1=_|head_tok=GIS|head_pos=_|stype=decl|len=3|head_func=appos|subord=LEFT	31	restatement_r	_	_
33	applications .	1	_	_	pos1=_|head_tok=applications|head_pos=_|stype=decl|len=2|head_func=nmod|subord=LEFT	31	same-unit_m	_	_
34	These operators reproduce programming errors	2	_	_	pos1=_|head_tok=reproduce|head_pos=_|stype=decl|len=5|head_func=root	31	elaboration_r	_	_
35	that are litely to occur during the development of this type of applications .	0	_	_	pos1=_|head_tok=occur|head_pos=_|stype=decl|len=14|head_func=acl:relcl|subord=LEFT	34	antithesis_r	_	_
36	In addition , we present the implementation of these operators	3	_	_	pos1=_|head_tok=present|head_pos=_|stype=decl|len=10|head_func=root	31	joint_m	_	_
37	and as proof of concept we apply these operators to two real - world GIS applications	3	_	_	pos1=_|head_tok=apply|head_pos=_|stype=decl|len=16|head_func=conj|subord=LEFT	31	joint_m	_	_
38	and we generate the mutants .	0	_	_	pos1=_|head_tok=generate|head_pos=_|stype=decl|len=6|head_func=conj|subord=LEFT	37	joint_m	_	_
39	2. Mutation Operators for GIS	4	_	_	pos1=_|head_tok=Operators|head_pos=_|stype=frag|len=5|head_func=root|heading=heading	46	preparation_r	_	_
40	As a previous step	0	_	_	pos1=_|head_tok=step|head_pos=_|stype=decl|len=4|head_func=obl|subord=RIGHT|para=para	46	background_r	_	_
41	to designing the mutation operators ,	0	_	_	pos1=_|head_tok=designing|head_pos=_|stype=decl|len=6|head_func=acl|subord=LEFT	40	elaboration_r	_	_
42	we analyzed the main technologies	1	_	_	pos1=_|head_tok=analyzed|head_pos=_|stype=decl|len=5|head_func=root	40	same-unit_m	_	_
43	used specifically in the development of GIS ,	0	_	_	pos1=_|head_tok=used|head_pos=_|stype=decl|len=8|head_func=acl|subord=RIGHT	42	elaboration_r	_	_
44	and we identified typical errors	2	_	_	pos1=_|head_tok=identified|head_pos=_|stype=decl|len=5|head_func=conj|subord=LEFT	40	joint_m	_	_
45	a programmer can introduce during the development .	0	_	_	pos1=_|head_tok=introduce|head_pos=_|stype=decl|len=8|head_func=acl:relcl|subord=LEFT	44	elaboration_r	_	_
46	These errors were formalized into mutation operators .	7	_	_	pos1=_|head_tok=formalized|head_pos=_|stype=decl|len=8|head_func=root	31	joint_m	_	_
47	In order to apply these operators to a SUT ,	0	_	_	pos1=_|head_tok=apply|head_pos=_|stype=decl|len=10|head_func=advcl|subord=RIGHT	48	purpose_r	_	_
48	we rely on Java reflection and aspect - oriented programming .	1	_	_	pos1=_|head_tok=rely|head_pos=_|stype=decl|len=11|head_func=root	46	means_r	_	_
49	Reflection allows us to obtain the list of classes and methods of the SUT ,	1	_	_	pos1=_|head_tok=allows|head_pos=_|stype=decl|len=15|head_func=root|subord=RIGHT	48	justify_r	_	_
50	so the user can decide the methods	0	_	_	pos1=_|head_tok=decide|head_pos=_|stype=decl|len=7|head_func=advcl|subord=LEFT	49	purpose_r	_	_
51	to wish the operators will be applied .	0	_	_	pos1=_|head_tok=wish|head_pos=_|stype=decl|len=8|head_func=acl|subord=LEFT	50	elaboration_r	_	_
52	Later , we capture information about the methods of the SUT	2	_	_	pos1=_|head_tok=capture|head_pos=_|stype=decl|len=11|head_func=root	46	sequence_m	_	_
53	to be mutated , together with the information of the mutation operators	0	_	_	pos1=_|head_tok=information|head_pos=_|stype=decl|len=12|head_func=nmod|subord=LEFT	52	purpose_r	_	_
54	that were already defined .	0	_	_	pos1=_|head_tok=defined|head_pos=_|stype=decl|len=5|head_func=acl:relcl|subord=LEFT	53	elaboration_r	_	_
55	From these data , we generate the mutation operator , in the form of on aspect ,	2	_	_	pos1=_|head_tok=generate|head_pos=_|stype=decl|len=17|head_func=root|subord=RIGHT	46	sequence_m	_	_
56	which will then be possible to interweave with the SUT	0	_	_	pos1=_|head_tok=possible|head_pos=_|stype=decl|len=10|head_func=acl:relcl|subord=LEFT	55	elaboration_r	_	_
57	which generates a mutant of the SUT .	0	_	_	pos1=_|head_tok=generates|head_pos=_|stype=decl|len=8|head_func=acl|subord=LEFT	56	elaboration_r	_	_
58	Next , we describe the definition of two operators and two cases of application on real - world GIS applications .	3	_	_	pos1=_|head_tok=describe|head_pos=_|stype=decl|len=21|head_func=root	46	elaboration_r	_	_
59	ChangeCoordSys Operator	5	_	_	pos1=_|head_tok=Operator|head_pos=_|stype=frag|len=2|head_func=root|para=para	61	preparation_r	_	_
60	( Listing 1 ) :	0	_	_	pos1=_|head_tok=Listing|head_pos=_|stype=frag|len=5|head_func=dep|subord=LEFT	59	restatement_r	_	_
61	It exchanges the coordinate system of a geometry ,	0	_	_	pos1=_|head_tok=exchanges|head_pos=_|stype=decl|len=9|head_func=root|subord=RIGHT	58	elaboration_r	_	_
62	so it does not match the coordinate system	0	_	_	pos1=_|head_tok=match|head_pos=_|stype=decl|len=8|head_func=advcl|subord=LEFT	61	result_r	_	_
63	that is being used in the user interface .	0	_	_	pos1=_|head_tok=used|head_pos=_|stype=decl|len=9|head_func=acl:relcl|subord=LEFT	62	elaboration_r	_	_
64	It simulates the error	1	_	_	pos1=_|head_tok=simulates|head_pos=_|stype=decl|len=4|head_func=root	66	preparation_r	_	_
65	of not checking	0	_	_	pos1=_|head_tok=checking|head_pos=_|stype=decl|len=3|head_func=acl|subord=LEFT	66	attribution_r	_	_
66	that the coordinate system is correct .	1	_	_	pos1=_|head_tok=correct|head_pos=_|stype=decl|len=7|head_func=ccomp|subord=LEFT	61	purpose_r	_	_
67	The error is introduced	1	_	_	pos1=_|head_tok=introduced|head_pos=_|stype=decl|len=4|head_func=root	68	result_r	_	_
68	by directly modifying the coordinate system of geometry	2	_	_	pos1=_|head_tok=modifying|head_pos=_|stype=decl|len=8|head_func=advcl|subord=LEFT	61	elaboration_r	_	_
69	when recovering the wrapping of the figure .	0	_	_	pos1=_|head_tok=recovering|head_pos=_|stype=decl|len=8|head_func=advcl|subord=LEFT	68	circumstance_r	_	_
70	Listing 1 :	0	_	_	pos1=_|head_tok=Listing|head_pos=_|stype=other|len=3|head_func=root|subord=RIGHT|caption=caption|caption	71	preparation_r	_	_
71	A simplified definition of the ChangeCoordSys Operator .	3	_	_	pos1=_|head_tok=definition|head_pos=_|stype=other|len=8|head_func=appos|subord=LEFT|caption=caption|caption	61	elaboration_r	_	_
72	This operator was applied to a mobile technology GIS application .	1	_	_	pos1=_|head_tok=applied|head_pos=_|stype=decl|len=11|head_func=root|para=para	77	background_r	_	_
73	This application allows registering places of interest for the user .	0	_	_	pos1=_|head_tok=allows|head_pos=_|stype=decl|len=11|head_func=root	72	elaboration_r	_	_
74	These areas of interest are called Geofences .	0	_	_	pos1=_|head_tok=called|head_pos=_|stype=decl|len=8|head_func=root	73	elaboration_r	_	_
75	A Geofence is determined by a geographical location	0	_	_	pos1=_|head_tok=determined|head_pos=_|stype=decl|len=8|head_func=root	74	elaboration_r	_	_
76	expressed in terms of latitude , longitude , and a radius around that location .	0	_	_	pos1=_|head_tok=expressed|head_pos=_|stype=decl|len=15|head_func=acl|subord=LEFT	75	elaboration_r	_	_
77	By creating a Geofence with an erroneous location from its central location ,	4	_	_	pos1=_|head_tok=creating|head_pos=_|stype=decl|len=13|head_func=advcl|subord=RIGHT	61	elaboration_r	_	_
78	the device will receive incorrect location notifications .	0	_	_	pos1=_|head_tok=receive|head_pos=_|stype=decl|len=8|head_func=root	77	purpose_r	_	_
79	As a result , the user will see in the application ’s map viewer the Geofences drawn in erroneous zones	2	_	_	pos1=_|head_tok=see|head_pos=_|stype=decl|len=20|head_func=root	77	result_r	_	_
80	( Figure 1 ) .	0	_	_	pos1=_|head_tok=Figure|head_pos=_|stype=decl|len=5|head_func=dep|subord=LEFT	79	evidence_r	_	_
81	Figure 1 .	0	_	_	pos1=_|head_tok=Figure|head_pos=_|stype=other|len=3|head_func=root|caption=caption|caption	82	preparation_r	_	_
82	Original and mutant application .	1	_	_	pos1=_|head_tok=Original|head_pos=_|stype=other|len=5|head_func=appos|subord=LEFT|caption=caption|caption	79	elaboration_r	_	_
83	BooleanPolygonConstraint Operator	3	_	_	pos1=_|head_tok=Operator|head_pos=_|stype=frag|len=2|head_func=root|para=para	85	preparation_r	_	_
84	( Listing 2 ) :	0	_	_	pos1=_|head_tok=Listing|head_pos=_|stype=frag|len=5|head_func=appos|subord=LEFT	83	restatement_r	_	_
85	It introduces errors in the processing of geometries ,	6	_	_	pos1=_|head_tok=introduces|head_pos=_|stype=decl|len=9|head_func=root|subord=RIGHT	61	joint_m	_	_
86	manipulating the result of the operations	0	_	_	pos1=_|head_tok=manipulating|head_pos=_|stype=decl|len=6|head_func=advcl|subord=LEFT	85	result_r	_	_
87	that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	0	_	_	pos1=_|head_tok=carry|head_pos=_|stype=decl|len=20|head_func=acl:relcl|subord=LEFT	86	elaboration_r	_	_
88	Listing 2 :	0	_	_	pos1=_|head_tok=Listing|head_pos=_|stype=other|len=3|head_func=root|subord=RIGHT|caption=caption|caption	89	preparation_r	_	_
89	A simplified definition of the BooleanPolygonConstraint Operator .	1	_	_	pos1=_|head_tok=definition|head_pos=_|stype=other|len=8|head_func=appos|subord=LEFT|caption=caption|caption	85	elaboration_r	_	_
90	To test this operator	1	_	_	pos1=_|head_tok=test|head_pos=_|stype=decl|len=4|head_func=advcl|subord=RIGHT|para=para	91	purpose_r	_	_
91	it was applied to a land reparcelling system .	2	_	_	pos1=_|head_tok=applied|head_pos=_|stype=decl|len=9|head_func=root	85	joint_m	_	_
92	The objective of the land reparcelling is to reunify the lands of an owner	0	_	_	pos1=_|head_tok=reunify|head_pos=_|stype=decl|len=14|head_func=root	91	elaboration_r	_	_
93	to facilitate their exploitation .	0	_	_	pos1=_|head_tok=facilitate|head_pos=_|stype=decl|len=5|head_func=advcl|subord=LEFT	92	purpose_r	_	_
94	In this application , the result of the operation between two polygons has been affected .	3	_	_	pos1=_|head_tok=affected|head_pos=_|stype=decl|len=16|head_func=root	95	preparation_r	_	_
95	This error causes the incorrect display of the resulting geometry	2	_	_	pos1=_|head_tok=causes|head_pos=_|stype=decl|len=10|head_func=root	85	joint_m	_	_
96	that should be drawn in the user interface after the operation	0	_	_	pos1=_|head_tok=drawn|head_pos=_|stype=decl|len=11|head_func=acl:relcl|subord=LEFT	95	elaboration_r	_	_
97	applied to the two initial geometries	0	_	_	pos1=_|head_tok=applied|head_pos=_|stype=decl|len=6|head_func=acl|subord=LEFT	96	elaboration_r	_	_
98	( Figure 2 ) .	1	_	_	pos1=_|head_tok=Figure|head_pos=_|stype=decl|len=5|head_func=dep|subord=LEFT	95	evidence_r	_	_
99	Figure 2 .	0	_	_	pos1=_|head_tok=Figure|head_pos=_|stype=other|len=3|head_func=root|caption=caption|caption	100	preparation_r	_	_
100	Original and mutant application .	2	_	_	pos1=_|head_tok=Original|head_pos=_|stype=other|len=5|head_func=appos|subord=LEFT|caption=caption|caption	95	background_r	_	_
101	3. Conclusions	4	_	_	pos1=_|head_tok=Conclusions|head_pos=_|stype=frag|len=2|head_func=root|heading=heading	105	preparation_r	_	_
102	In existing proposals , we can find both generic and specific mutation operators .	1	_	_	pos1=_|head_tok=find|head_pos=_|stype=decl|len=14|head_func=root|para=para	103	antithesis_r	_	_
103	However , these are not adequate	1	_	_	pos1=_|head_tok=adequate|head_pos=_|stype=decl|len=6|head_func=root	105	justify_r	_	_
104	to cover errors in particular domains .	0	_	_	pos1=_|head_tok=cover|head_pos=_|stype=decl|len=7|head_func=advcl|subord=LEFT	103	purpose_r	_	_
105	We have defined new operators specific to the GIS domain and a way	7	_	_	pos1=_|head_tok=defined|head_pos=_|stype=decl|len=13|head_func=root	31	joint_m	_	_
106	to apply them to a SUT .	0	_	_	pos1=_|head_tok=apply|head_pos=_|stype=decl|len=7|head_func=acl|subord=LEFT	105	purpose_r	_	_
107	In addition , we have tested the operators	2	_	_	pos1=_|head_tok=tested|head_pos=_|stype=decl|len=8|head_func=root	105	joint_m	_	_
108	defined in two GIS applications .	0	_	_	pos1=_|head_tok=defined|head_pos=_|stype=decl|len=6|head_func=acl|subord=LEFT	107	elaboration_r	_	_
109	As future work , we intend to extend this approach to other domains ,	3	_	_	pos1=_|head_tok=intend|head_pos=_|stype=decl|len=14|head_func=root|subord=RIGHT	105	joint_m	_	_
110	as well as to use the developed operators for the automatic improvement of sets of test cases .	0	_	_	pos1=_|head_tok=use|head_pos=_|stype=decl|len=18|head_func=conj|subord=LEFT	109	joint_m	_	_
