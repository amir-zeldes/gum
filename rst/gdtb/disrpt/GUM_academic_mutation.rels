doc	unit1_toks	unit2_toks	unit1_txt	unit2_txt	s1_toks	s2_toks	unit1_sent	unit2_sent	dir	rel_type	orig_label	label
GUM_academic_mutation	58-69	70-75	In this article , we propose the definition of specific mutation operators	for testing Geographic Information Systems .	58-75	58-75	In this article , we propose the definition of specific mutation operators for testing Geographic Information Systems .	In this article , we propose the definition of specific mutation operators for testing Geographic Information Systems .	1<2	explicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	58-75	76-105	In this article , we propose the definition of specific mutation operators for testing Geographic Information Systems .	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	58-75	76-105	In this article , we propose the definition of specific mutation operators for testing Geographic Information Systems .	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	1<2	implicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	76-87	88-105	We describe the process for applying the operators and generating mutants ,	and present a case study where these mutation operators are applied to two real - world applications .	76-105	76-105	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	76-87	88-105	We describe the process for applying the operators and generating mutants ,	and present a case study where these mutation operators are applied to two real - world applications .	76-105	76-105	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	1<2	implicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	80-83	84-87	for applying the operators	and generating mutants ,	76-105	76-105	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	We describe the process for applying the operators and generating mutants , and present a case study where these mutation operators are applied to two real - world applications .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	119-143	144-173	Mutation - based testing [ 1 ] is a test technique that involves artificially introducing errors into a System Under Test ( SUT ) .	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	119-143	144-173	Mutation - based testing [ 1 ] is a test technique that involves artificially introducing errors into a System Under Test ( SUT ) .	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	1<2	implicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	144-173	174-186	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	The different mutants are generated automatically by the application of mutation operators .	144-173	174-186	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	The different mutants are generated automatically by the application of mutation operators .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	152-158	159-173	in which a change has been done	that , in most cases , will lead to a behaviour different than expected .	144-173	144-173	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	A mutant is a copy of the system in which a change has been done that , in most cases , will lead to a behaviour different than expected .	1<2	altlex	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	187-217	218-235	In the state of the art , we have found mutation operators , both general purpose and specific to different technologies , languages and paradigms [ 2 – 9 ] .	However , these operators are not adequate when trying to test software features associated with specific domains .	187-217	218-235	In the state of the art , we have found mutation operators , both general purpose and specific to different technologies , languages and paradigms [ 2 – 9 ] .	However , these operators are not adequate when trying to test software features associated with specific domains .	1<2	explicit	comparison.concession.arg2-as-denier	comparison.concession
GUM_academic_mutation	218-224	225-235	However , these operators are not adequate	when trying to test software features associated with specific domains .	218-235	218-235	However , these operators are not adequate when trying to test software features associated with specific domains .	However , these operators are not adequate when trying to test software features associated with specific domains .	1<2	explicit	contingency.condition.arg2-as-cond	contingency.condition
GUM_academic_mutation	236-256	276-307	In this article , we propose mutation operators specific to the domain of Geographic Information Systems ( GIS ) applications .	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	236-256	276-307	In this article , we propose mutation operators specific to the domain of Geographic Information Systems ( GIS ) applications .	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	236-256	257-275	In this article , we propose mutation operators specific to the domain of Geographic Information Systems ( GIS ) applications .	These operators reproduce programming errors that are litely to occur during the development of this type of applications .	236-256	257-275	In this article , we propose mutation operators specific to the domain of Geographic Information Systems ( GIS ) applications .	These operators reproduce programming errors that are litely to occur during the development of this type of applications .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	276-285	286-307	In addition , we present the implementation of these operators	and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	276-307	276-307	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	286-301	302-307	and as proof of concept we apply these operators to two real - world GIS applications	and we generate the mutants .	276-307	276-307	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	In addition , we present the implementation of these operators and as proof of concept we apply these operators to two real - world GIS applications and we generate the mutants .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	313-335	336-348	As a previous step to designing the mutation operators , we analyzed the main technologies used specifically in the development of GIS ,	and we identified typical errors a programmer can introduce during the development .	313-348	313-348	As a previous step to designing the mutation operators , we analyzed the main technologies used specifically in the development of GIS , and we identified typical errors a programmer can introduce during the development .	As a previous step to designing the mutation operators , we analyzed the main technologies used specifically in the development of GIS , and we identified typical errors a programmer can introduce during the development .	1<2	explicit	expansion.conjunction	expansion.conjunction
GUM_academic_mutation	313-348	349-356	As a previous step to designing the mutation operators , we analyzed the main technologies used specifically in the development of GIS , and we identified typical errors a programmer can introduce during the development .	These errors were formalized into mutation operators .	313-348	349-356	As a previous step to designing the mutation operators , we analyzed the main technologies used specifically in the development of GIS , and we identified typical errors a programmer can introduce during the development .	These errors were formalized into mutation operators .	1<2	implicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	349-356	408-435	These errors were formalized into mutation operators .	Later , we capture information about the methods of the SUT to be mutated , together with the information of the mutation operators that were already defined .	349-356	408-435	These errors were formalized into mutation operators .	Later , we capture information about the methods of the SUT to be mutated , together with the information of the mutation operators that were already defined .	1<2	explicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	357-366	367-377	In order to apply these operators to a SUT ,	we rely on Java reflection and aspect - oriented programming .	357-377	357-377	In order to apply these operators to a SUT , we rely on Java reflection and aspect - oriented programming .	In order to apply these operators to a SUT , we rely on Java reflection and aspect - oriented programming .	1<2	explicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	357-377	378-407	In order to apply these operators to a SUT , we rely on Java reflection and aspect - oriented programming .	Reflection allows us to obtain the list of classes and methods of the SUT , so the user can decide the methods to wish the operators will be applied .	357-377	378-407	In order to apply these operators to a SUT , we rely on Java reflection and aspect - oriented programming .	Reflection allows us to obtain the list of classes and methods of the SUT , so the user can decide the methods to wish the operators will be applied .	1<2	implicit	contingency.cause.reason	contingency.cause
GUM_academic_mutation	378-392	393-407	Reflection allows us to obtain the list of classes and methods of the SUT ,	so the user can decide the methods to wish the operators will be applied .	378-407	378-407	Reflection allows us to obtain the list of classes and methods of the SUT , so the user can decide the methods to wish the operators will be applied .	Reflection allows us to obtain the list of classes and methods of the SUT , so the user can decide the methods to wish the operators will be applied .	1<2	explicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	408-435	436-470	Later , we capture information about the methods of the SUT to be mutated , together with the information of the mutation operators that were already defined .	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	408-435	436-470	Later , we capture information about the methods of the SUT to be mutated , together with the information of the mutation operators that were already defined .	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	1<2	implicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	436-452	453-462	From these data , we generate the mutation operator , in the form of on aspect ,	which will then be possible to interweave with the SUT	436-470	436-470	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	1<2	explicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	436-470	471-491	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	Next , we describe the definition of two operators and two cases of application on real - world GIS applications .	436-470	471-491	From these data , we generate the mutation operator , in the form of on aspect , which will then be possible to interweave with the SUT which generates a mutant of the SUT .	Next , we describe the definition of two operators and two cases of application on real - world GIS applications .	1<2	explicit	temporal.asynchronous.precedence	temporal.asynchronous
GUM_academic_mutation	499-507	508-524	It exchanges the coordinate system of a geometry ,	so it does not match the coordinate system that is being used in the user interface .	499-524	499-524	It exchanges the coordinate system of a geometry , so it does not match the coordinate system that is being used in the user interface .	It exchanges the coordinate system of a geometry , so it does not match the coordinate system that is being used in the user interface .	1<2	explicit	contingency.cause.result	contingency.cause
GUM_academic_mutation	499-524	525-538	It exchanges the coordinate system of a geometry , so it does not match the coordinate system that is being used in the user interface .	It simulates the error of not checking that the coordinate system is correct .	499-524	525-538	It exchanges the coordinate system of a geometry , so it does not match the coordinate system that is being used in the user interface .	It simulates the error of not checking that the coordinate system is correct .	1<2	implicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	539-542	543-558	The error is introduced	by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	539-558	539-558	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	1<2	explicit	expansion.manner.arg2-as-manner	expansion.manner
GUM_academic_mutation	539-542	543-558	The error is introduced	by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	539-558	539-558	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	1>2	explicit	contingency.purpose.arg1-as-goal	contingency.purpose
GUM_academic_mutation	543-550	551-558	by directly modifying the coordinate system of geometry	when recovering the wrapping of the figure .	539-558	539-558	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	The error is introduced by directly modifying the coordinate system of geometry when recovering the wrapping of the figure .	1<2	explicit	temporal.synchronous	temporal.synchronous
GUM_academic_mutation	570-580	581-591	This operator was applied to a mobile technology GIS application .	This application allows registering places of interest for the user .	570-580	581-591	This operator was applied to a mobile technology GIS application .	This application allows registering places of interest for the user .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	581-591	592-599	This application allows registering places of interest for the user .	These areas of interest are called Geofences .	581-591	592-599	This application allows registering places of interest for the user .	These areas of interest are called Geofences .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	592-599	600-622	These areas of interest are called Geofences .	A Geofence is determined by a geographical location expressed in terms of latitude , longitude , and a radius around that location .	592-599	600-622	These areas of interest are called Geofences .	A Geofence is determined by a geographical location expressed in terms of latitude , longitude , and a radius around that location .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	623-643	644-668	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	As a result , the user will see in the application ’s map viewer the Geofences drawn in erroneous zones ( Figure 1 ) .	623-643	644-668	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	As a result , the user will see in the application ’s map viewer the Geofences drawn in erroneous zones ( Figure 1 ) .	1<2	explicit	contingency.cause.result	contingency.cause
GUM_academic_mutation	623-635	636-643	By creating a Geofence with an erroneous location from its central location ,	the device will receive incorrect location notifications .	623-643	623-643	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	1<2	explicit	expansion.manner.arg2-as-manner	expansion.manner
GUM_academic_mutation	623-635	636-643	By creating a Geofence with an erroneous location from its central location ,	the device will receive incorrect location notifications .	623-643	623-643	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	By creating a Geofence with an erroneous location from its central location , the device will receive incorrect location notifications .	1>2	explicit	contingency.condition.arg1-as-cond	contingency.condition
GUM_academic_mutation	684-692	693-718	It introduces errors in the processing of geometries ,	manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	684-718	684-718	It introduces errors in the processing of geometries , manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	It introduces errors in the processing of geometries , manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	1<2	altlex	contingency.cause.result	contingency.cause
GUM_academic_mutation	684-692	693-718	It introduces errors in the processing of geometries ,	manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	684-718	684-718	It introduces errors in the processing of geometries , manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	It introduces errors in the processing of geometries , manipulating the result of the operations that carry out the verification of different topological restrictions between geometries , such as intersects , covers or overlap .	1<2	implicit	contingency.cause.result	contingency.cause
GUM_academic_mutation	730-733	734-742	To test this operator	it was applied to a land reparcelling system .	730-742	730-742	To test this operator it was applied to a land reparcelling system .	To test this operator it was applied to a land reparcelling system .	1<2	implicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	730-742	743-761	To test this operator it was applied to a land reparcelling system .	The objective of the land reparcelling is to reunify the lands of an owner to facilitate their exploitation .	730-742	743-761	To test this operator it was applied to a land reparcelling system .	The objective of the land reparcelling is to reunify the lands of an owner to facilitate their exploitation .	1<2	implicit	expansion.level-of-detail.arg2-as-detail	expansion.level-of-detail
GUM_academic_mutation	743-756	757-761	The objective of the land reparcelling is to reunify the lands of an owner	to facilitate their exploitation .	743-761	743-761	The objective of the land reparcelling is to reunify the lands of an owner to facilitate their exploitation .	The objective of the land reparcelling is to reunify the lands of an owner to facilitate their exploitation .	1<2	implicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	820-833	834-846	In existing proposals , we can find both generic and specific mutation operators .	However , these are not adequate to cover errors in particular domains .	820-833	834-846	In existing proposals , we can find both generic and specific mutation operators .	However , these are not adequate to cover errors in particular domains .	1<2	explicit	comparison.contrast	comparison.contrast
GUM_academic_mutation	834-839	840-846	However , these are not adequate	to cover errors in particular domains .	834-846	834-846	However , these are not adequate to cover errors in particular domains .	However , these are not adequate to cover errors in particular domains .	1<2	implicit	contingency.purpose.arg2-as-goal	contingency.purpose
GUM_academic_mutation	847-866	867-880	We have defined new operators specific to the GIS domain and a way to apply them to a SUT .	In addition , we have tested the operators defined in two GIS applications .	847-866	867-880	We have defined new operators specific to the GIS domain and a way to apply them to a SUT .	In addition , we have tested the operators defined in two GIS applications .	1<2	explicit	expansion.conjunction	expansion.conjunction
